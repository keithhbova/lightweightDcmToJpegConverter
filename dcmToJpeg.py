# Form implementation generated from reading ui file 'dcmConverter.ui'
#
# Created by: PyQt6 UI code generator 6.4.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QFileDialog
import pydicom
import pydicom.data
import numpy as np
from PIL import Image
import os



DEFAULT_PATH = "/Users/keithhbova/Desktop/data"

def getFileNamesAsAList(directoryName = DEFAULT_PATH):
    print(directoryName)
    base = directoryName
    listOfFiles = []
    listOfFiles = pydicom.data.data_manager.get_files(base)
    listOfFiles.sort()
    listOfFiles.pop(0)
    listOfFiles.pop()
    return listOfFiles






def convertAllDcmFilesInDirectoryToJpeg(directoryName = DEFAULT_PATH):
    
    listOfFiles = getFileNamesAsAList(directoryName)
    
    try:
        os.mkdir("converted")
    except Exception as ex:
        print("Can't create folder, likely because it already exists. Delete converted folder and try again")
        exit()
    
    i = 0
    
    for file in listOfFiles:
        ds = pydicom.dcmread(file)
        ds = ds.pixel_array.astype(float)
        
        
        rescaled_image = (np.maximum(ds,0)/ds.max())*255 # float pixels
        final_image = np.uint8(rescaled_image) # integers pixels


        pillowImage = Image.fromarray(final_image)
        pillowImage.save(directoryName + "/../converted/" + "img_" + str(i) + ".jpeg")
        i+= 1
    
    return 0

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(535, 177)
        self.buttonBox = QtWidgets.QDialogButtonBox(Dialog)
        self.buttonBox.setGeometry(QtCore.QRect(200, 130, 171, 32))
        self.buttonBox.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.StandardButton.Cancel|QtWidgets.QDialogButtonBox.StandardButton.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(220, 70, 113, 32))
        self.pushButton.setObjectName("pushButton")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(20, 40, 501, 16))
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(20, 10, 231, 16))
        self.label_2.setObjectName("label_2")

        self.retranslateUi(Dialog)
        self.buttonBox.accepted.connect(Dialog.accept) # type: ignore
        self.buttonBox.rejected.connect(Dialog.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Dialog)

#%%%%%%%%%%%%%%%

        self.pushButton.clicked.connect(self.pushButton1WasClicked)
        
    
    def convertAllTheDcmFilesInDirectoryToJpeg(self, directory):
        print(directory)    
        
    def pushButton1WasClicked(self):
        print("clicked file search")
        qfd = QFileDialog()        
        directoryName = str(QFileDialog.getExistingDirectory(qfd ,"Select Directory"))
        self.label.setText(directoryName)
        convertAllDcmFilesInDirectoryToJpeg(directoryName)



#%%%%%%%%%%%%%%%%%%



    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "dicom to jpeg converter"))
        self.pushButton.setText(_translate("Dialog", "Search"))
        self.label_2.setText(_translate("Dialog", "Directory:"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec())
